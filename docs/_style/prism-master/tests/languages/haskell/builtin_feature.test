abs acos acosh all and
any appendFile approxRational
asTypeOf asin asinh atan
atan2 atanh basicIORun break
catch ceiling chr compare
concat concatMap const
cos cosh curry cycle
decodeFloat denominator
digitToInt div divMod
drop dropWhile either
elem encodeFloat enumFrom
enumFromThen enumFromThenTo
enumFromTo error even exp
exponent fail filter flip
floatDigits floatRadix
floatRange floor fmap
foldl foldl1 foldr foldr1
fromDouble fromEnum fromInt
fromInteger fromIntegral
fromRational fst gcd
getChar getContents getLine
group head id inRange index
init intToDigit interact
ioError isAlpha isAlphaNum
isAscii isControl isDenormalized
isDigit isHexDigit isIEEE
isInfinite isLower isNaN
isNegativeZero isOctDigit
isPrint isSpace isUpper iterate
last lcm length lex
lexDigits lexLitChar lines
log logBase lookup map
mapM mapM_ max maxBound
maximum maybe min minBound
minimum mod negate not
notElem null numerator odd
or ord otherwise pack pi
pred primExitWith print
product properFraction
putChar putStr putStrLn quot
quotRem range rangeSize read
readDec readFile readFloat readHex
readIO readInt readList
readLitChar readLn readOct
readParen readSigned reads
readsPrec realToFrac recip
rem repeat replicate return
reverse round scaleFloat
scanl scanl1 scanr scanr1
seq sequence sequence_ show
showChar showInt showList
showLitChar showParen showSigned
showString shows showsPrec
significand signum sin sinh
snd sort span splitAt sqrt
subtract succ sum tail take
takeWhile tan tanh threadToIOResult
toEnum toInt toInteger
toLower toRational toUpper
truncate uncurry undefined
unlines until unwords
unzip unzip3 userError words
writeFile zip zip3 zipWith
zipWith3

----------------------------------------------------

[
	["builtin", "abs"], ["builtin", "acos"], ["builtin", "acosh"], ["builtin", "all"], ["builtin", "and"],
	["builtin", "any"], ["builtin", "appendFile"], ["builtin", "approxRational"],
	["builtin", "asTypeOf"], ["builtin", "asin"], ["builtin", "asinh"], ["builtin", "atan"],
	["builtin", "atan2"], ["builtin", "atanh"], ["builtin", "basicIORun"], ["builtin", "break"],
	["builtin", "catch"], ["builtin", "ceiling"], ["builtin", "chr"], ["builtin", "compare"],
	["builtin", "concat"], ["builtin", "concatMap"], ["builtin", "const"],
	["builtin", "cos"], ["builtin", "cosh"], ["builtin", "curry"], ["builtin", "cycle"],
	["builtin", "decodeFloat"], ["builtin", "denominator"],
	["builtin", "digitToInt"], ["builtin", "div"], ["builtin", "divMod"],
	["builtin", "drop"], ["builtin", "dropWhile"], ["builtin", "either"],
	["builtin", "elem"], ["builtin", "encodeFloat"], ["builtin", "enumFrom"],
	["builtin", "enumFromThen"], ["builtin", "enumFromThenTo"],
	["builtin", "enumFromTo"], ["builtin", "error"], ["builtin", "even"], ["builtin", "exp"],
	["builtin", "exponent"], ["builtin", "fail"], ["builtin", "filter"], ["builtin", "flip"],
	["builtin", "floatDigits"], ["builtin", "floatRadix"],
	["builtin", "floatRange"], ["builtin", "floor"], ["builtin", "fmap"],
	["builtin", "foldl"], ["builtin", "foldl1"], ["builtin", "foldr"], ["builtin", "foldr1"],
	["builtin", "fromDouble"], ["builtin", "fromEnum"], ["builtin", "fromInt"],
	["builtin", "fromInteger"], ["builtin", "fromIntegral"],
	["builtin", "fromRational"], ["builtin", "fst"], ["builtin", "gcd"],
	["builtin", "getChar"], ["builtin", "getContents"], ["builtin", "getLine"],
	["builtin", "group"], ["builtin", "head"], ["builtin", "id"], ["builtin", "inRange"], ["builtin", "index"],
	["builtin", "init"], ["builtin", "intToDigit"], ["builtin", "interact"],
	["builtin", "ioError"], ["builtin", "isAlpha"], ["builtin", "isAlphaNum"],
	["builtin", "isAscii"], ["builtin", "isControl"], ["builtin", "isDenormalized"],
	["builtin", "isDigit"], ["builtin", "isHexDigit"], ["builtin", "isIEEE"],
	["builtin", "isInfinite"], ["builtin", "isLower"], ["builtin", "isNaN"],
	["builtin", "isNegativeZero"], ["builtin", "isOctDigit"],
	["builtin", "isPrint"], ["builtin", "isSpace"], ["builtin", "isUpper"], ["builtin", "iterate"],
	["builtin", "last"], ["builtin", "lcm"], ["builtin", "length"], ["builtin", "lex"],
	["builtin", "lexDigits"], ["builtin", "lexLitChar"], ["builtin", "lines"],
	["builtin", "log"], ["builtin", "logBase"], ["builtin", "lookup"], ["builtin", "map"],
	["builtin", "mapM"], ["builtin", "mapM_"], ["builtin", "max"], ["builtin", "maxBound"],
	["builtin", "maximum"], ["builtin", "maybe"], ["builtin", "min"], ["builtin", "minBound"],
	["builtin", "minimum"], ["builtin", "mod"], ["builtin", "negate"], ["builtin", "not"],
	["builtin", "notElem"], ["builtin", "null"], ["builtin", "numerator"], ["builtin", "odd"],
	["builtin", "or"], ["builtin", "ord"], ["builtin", "otherwise"], ["builtin", "pack"], ["builtin", "pi"],
	["builtin", "pred"], ["builtin", "primExitWith"], ["builtin", "print"],
	["builtin", "product"], ["builtin", "properFraction"],
	["builtin", "putChar"], ["builtin", "putStr"], ["builtin", "putStrLn"], ["builtin", "quot"],
	["builtin", "quotRem"], ["builtin", "range"], ["builtin", "rangeSize"], ["builtin", "read"],
	["builtin", "readDec"], ["builtin", "readFile"], ["builtin", "readFloat"], ["builtin", "readHex"],
	["builtin", "readIO"], ["builtin", "readInt"], ["builtin", "readList"],
	["builtin", "readLitChar"], ["builtin", "readLn"], ["builtin", "readOct"],
	["builtin", "readParen"], ["builtin", "readSigned"], ["builtin", "reads"],
	["builtin", "readsPrec"], ["builtin", "realToFrac"], ["builtin", "recip"],
	["builtin", "rem"], ["builtin", "repeat"], ["builtin", "replicate"], ["builtin", "return"],
	["builtin", "reverse"], ["builtin", "round"], ["builtin", "scaleFloat"],
	["builtin", "scanl"], ["builtin", "scanl1"], ["builtin", "scanr"], ["builtin", "scanr1"],
	["builtin", "seq"], ["builtin", "sequence"], ["builtin", "sequence_"], ["builtin", "show"],
	["builtin", "showChar"], ["builtin", "showInt"], ["builtin", "showList"],
	["builtin", "showLitChar"], ["builtin", "showParen"], ["builtin", "showSigned"],
	["builtin", "showString"], ["builtin", "shows"], ["builtin", "showsPrec"],
	["builtin", "significand"], ["builtin", "signum"], ["builtin", "sin"], ["builtin", "sinh"],
	["builtin", "snd"], ["builtin", "sort"], ["builtin", "span"], ["builtin", "splitAt"], ["builtin", "sqrt"],
	["builtin", "subtract"], ["builtin", "succ"], ["builtin", "sum"], ["builtin", "tail"], ["builtin", "take"],
	["builtin", "takeWhile"], ["builtin", "tan"], ["builtin", "tanh"], ["builtin", "threadToIOResult"],
	["builtin", "toEnum"], ["builtin", "toInt"], ["builtin", "toInteger"],
	["builtin", "toLower"], ["builtin", "toRational"], ["builtin", "toUpper"],
	["builtin", "truncate"], ["builtin", "uncurry"], ["builtin", "undefined"],
	["builtin", "unlines"], ["builtin", "until"], ["builtin", "unwords"],
	["builtin", "unzip"], ["builtin", "unzip3"], ["builtin", "userError"], ["builtin", "words"],
	["builtin", "writeFile"], ["builtin", "zip"], ["builtin", "zip3"], ["builtin", "zipWith"],
	["builtin", "zipWith3"]
]

----------------------------------------------------

Checks for all builtin.