abstract
as
async
await
break
case
catch
class;
const
constructor
continue
debugger
declare
default
delete
do
else
enum
export
extends;
finally
for
from
function
get
if
implements;
import
in
instanceof;
interface;
is
keyof
let
module
namespace
new;
null
of
package
private
protected
public
readonly
return
require
set
static
super
switch
this
throw
try
type
typeof
var
void
while
with
yield

----------------------------------------------------

[
	["keyword", "abstract"],
	["keyword", "as"],
	["keyword", "async"],
	["keyword", "await"],
	["keyword", "break"],
	["keyword", "case"],
	["keyword", "catch"],
	["keyword", "class"], ["punctuation", ";"],
	["keyword", "const"],
	["keyword", "constructor"],
	["keyword", "continue"],
	["keyword", "debugger"],
	["keyword", "declare"],
	["keyword", "default"],
	["keyword", "delete"],
	["keyword", "do"],
	["keyword", "else"],
	["keyword", "enum"],
	["keyword", "export"],
	["keyword", "extends"], ["punctuation", ";"],
	["keyword", "finally"],
	["keyword", "for"],
	["keyword", "from"],
	["keyword", "function"],
	["keyword", "get"],
	["keyword", "if"],
	["keyword", "implements"], ["punctuation", ";"],
	["keyword", "import"],
	["keyword", "in"],
	["keyword", "instanceof"], ["punctuation", ";"],
	["keyword", "interface"], ["punctuation", ";"],
	["keyword", "is"],
	["keyword", "keyof"],
	["keyword", "let"],
	["keyword", "module"],
	["keyword", "namespace"],
	["keyword", "new"], ["punctuation", ";"],
	["keyword", "null"],
	["keyword", "of"],
	["keyword", "package"],
	["keyword", "private"],
	["keyword", "protected"],
	["keyword", "public"],
	["keyword", "readonly"],
	["keyword", "return"],
	["keyword", "require"],
	["keyword", "set"],
	["keyword", "static"],
	["keyword", "super"],
	["keyword", "switch"],
	["keyword", "this"],
	["keyword", "throw"],
	["keyword", "try"],
	["keyword", "type"],
	["keyword", "typeof"],
	["keyword", "var"],
	["keyword", "void"],
	["keyword", "while"],
	["keyword", "with"],
	["keyword", "yield"]
]

----------------------------------------------------

Checks for keywords.